package cn.baozcc.generator.test.controller;


import org.springframework.web.bind.annotation.RequestMapping;

import org.springframework.web.bind.annotation.RestController;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.security.access.prepost.PreAuthorize;

import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;

import cn.baozcc.generator.test.service.TDeviceService;


/**
 * <p>
 * 终端表 前端控制器
 * </p>
 *
 * @author jobob
 * @date 2020-05-28 ${time}
 */
@Slf4j
@Api(tags="终端表 API")
@RestController
@RequestMapping("tDevice")
public class TDeviceController {

    @Autowired
    private TDeviceService tableNameService;

    /**
     * 添加终端表
     */
    @Log("新增终端表")
    @PostMapping("/add")
    @ApiOperation(value = "添加TDevice对象",notes = "添加终端表",response = ApiResult.class)
    @PreAuthorize("@el.check('TDevice:add')")
    public ApiResult<Boolean> addTDevice(@Valid @RequestBody TDevice ${cfg.entityObjectName}) throws Exception{
        boolean flag = tableNameService.save(${cfg.entityObjectName});
        return ApiResult.result(flag);
    }

    /**
     * 修改终端表
     */
    @Log("修改终端表")
    @PostMapping("/update")
    @ApiOperation(value = "修改TDevice对象",notes = "修改终端表",response = ApiResult.class)
    @PreAuthorize("@el.check('TDevice:edit')")
    public ApiResult<Boolean> updateTDevice(@Valid @RequestBody TDevice ${cfg.entityObjectName}) throws Exception{
        boolean flag = tableNameService.updateById(${cfg.entityObjectName});
        return ApiResult.result(flag);
    }

    /**
     * 删除终端表
     */
    @Log("删除终端表")
    @PostMapping("/delete")
    @ApiOperation(value = "删除TDevice对象",notes = "删除终端表",response = ApiResult.class)
    @PreAuthorize("@el.check('TDevice:del')")
    public ApiResult<Boolean> deleteTDevice(@Valid @RequestBody IdParam idParam) throws Exception{
        boolean flag = tableNameService.removeById(idParam.getId());
        return ApiResult.result(flag);
    }

    /**
     * 获取终端表
     */
    @Log("获取终端表")
    @PostMapping("/info")
    @ApiOperation(value = "获取TDevice对象详情",notes = "查看终端表",response = TDeviceQueryVo.class)
    @PreAuthorize("@el.check('TDevice:query')")
    public ApiResult<TDeviceQueryVo> getTDevice(@Valid @RequestBody IdParam idParam) throws Exception{
        TDeviceQueryVo ${cfg.entityObjectName}QueryVo = tableNameService.getTDeviceById(idParam.getId());
        return ApiResult.ok(${cfg.entityObjectName}QueryVo);
    }

    /**
     * 终端表分页列表
     */
    @Log("查询终端表分页列表")
    @PostMapping("/getPageList")
    @ApiOperation(value = "获取TDevice分页列表",notes = "终端表分页列表",response = TDeviceQueryVo.class)
    @PreAuthorize("@el.check('TDevice:list')")
    public ApiResult<Paging<TDeviceQueryVo>> getTDevicePageList(@Valid @RequestBody(required = false) TDeviceQueryParam ${cfg.entityObjectName}QueryParam) throws Exception{
            Paging<TDeviceQueryVo> paging = ${cfg.entityObjectName}Service.getTDevicePageList(${cfg.entityObjectName}QueryParam);
        return ApiResult.ok(paging);
    }

}

